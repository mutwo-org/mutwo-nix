#!/usr/bin/env python

import concurrent.futures
import os
import subprocess
import sys


failed_list = []


def test(software: str, python_version: str = "310"):
    # Create test nix derivation
    test_software_id = f".{software}_{python_version}.nix"
    with open(test_software_id, "w") as f:
        f.write(_t(software, python_version))
    # Build derivation
    name = f"{software} (py={python_version})"
    space = 30 - len(name)
    p = subprocess.run(["nix-build", f"{test_software_id}"], capture_output=True)
    # What's the build state?
    msg = f"Build '{name}':{' ' * space}"
    if passed := (p.returncode == 0):
        msg += "passed"
    else:
        msg += "failed"
    print(msg)
    if not passed:
        s = "-" * 100
        t = f"ERROR LOG {name}"
        failed_text = f"{s}\n{s}\n\t{t}\n\n{p.stderr.decode()}\n\n{s}\n{s}\n"
        failed_list.append(failed_text)
    # Cleanup
    os.remove(test_software_id)
    return passed


def _t(software: str, python_version: str) -> str:
    return rf"""{{}}:

    let

      sources = import ./nix/sources.nix;
      pkgs = import sources.nixpkgs {{}};
      pythonPackages = pkgs.python{python_version}Packages;

    in

      import ./{software}/default.nix {{sources=sources;pkgs=pkgs;pythonPackages=pythonPackages;}}
    """


def run_tests(python_version: str = "310"):
    print(f"\nTest with python {python_version}.\n")
    with concurrent.futures.ThreadPoolExecutor(max_workers=4) as pool:
        future_list = []
        for d in os.listdir(r"./."):
            if os.path.isdir(d) and os.path.exists(f"{d}/default.nix"):
                future = pool.submit(test, d, python_version)
                future_list.append(future)
        try:
            [f.result() for f in future_list]
        except KeyboardInterrupt:
            [f.cancel() for f in future_list]
            raise


print("Run software compilation test...")

for python_version in "310 311 312".split(" "):
    run_tests(python_version)

if failed_list:
    print("\n".join(failed_list))
    sys.exit(1)

print("All tests were successful.")
sys.exit(0)
